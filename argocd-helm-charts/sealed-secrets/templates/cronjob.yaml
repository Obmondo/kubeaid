{{ if .Values.backup }}
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: backup-sealed-secrets
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 20
  jobTemplate:
    spec:
      template:
        metadata:
          annotations:
          {{- if .Values.backup.kube2iamRole }}
            iam.amazonaws.com/role: {{ .Values.backup.kube2iamRole | quote }}
          {{- end }}
          {{- if .Values.backup.annotations }}
            {{- toYaml .Values.backup.annotations | nindent 12 }}
          {{- end }}
          labels:
            app: backup-sealed-secrets
        spec:
          containers:
          - name: backup-sealed-secrets
            command:
            - /bin/bash
            - /mnt/script
            image: {{ .Values.backup.image }}
            imagePullPolicy: IfNotPresent
            env:
          {{- if eq .Values.backup.provider "aws" }}
          {{- if not .Values.backup.kube2iamRole }}
            - name: AWS_ACCESS_KEY_ID
              value: {{ .Values.backup.access_key_id }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.access_secret | default "backup-sealed-secrets-pod-env" }}
                  key: AWS_SECRET_ACCESS_KEY
          {{- end }}
          {{- end }}
          {{- if eq .Values.backup.provider "azure" }}
            - name: AZURE_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.backup.access_secret | default "backup-sealed-secrets-pod-env" }}
                  key: AZURE_ACCESS_KEY
            - name: AZURE_STORAGE_ACCOUNT
              value: {{ .Values.backup.azureStorageAccount }}
          {{- end }}
            volumeMounts:
            - mountPath: /mnt
              name: scripts
            securityContext:
              allowPrivilegeEscalation: false
              runAsNonRoot: true
              runAsUser: 1000
              capabilities:
                drop: ["ALL"]
              seccompProfile:
                type: RuntimeDefault
          restartPolicy: OnFailure
          serviceAccount: sealed-secrets
          serviceAccountName: sealed-secrets
          volumes:
          - configMap:
              defaultMode: 420
              name: backup-sealed-secrets
            name: scripts
  schedule: {{ .Values.backup.schedule | quote }}
  startingDeadlineSeconds: 180
  successfulJobsHistoryLimit: 3
---
{{ end }}
