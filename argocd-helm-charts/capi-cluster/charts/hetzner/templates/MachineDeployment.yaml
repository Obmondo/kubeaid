{{/* Handling node-groups in HCloud. */}}
{{- if or (eq .Values.mode "hcloud") (eq .Values.mode "hybrid") }}
{{- range $nodeGroupIndex, $nodeGroup := $.Values.nodeGroups.hcloud }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
  annotations:
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-min-size: {{ $nodeGroup.minSize | quote }}
    cluster.x-k8s.io/cluster-api-autoscaler-node-group-max-size: {{ $nodeGroup.maxSize | quote }}
    capacity.cluster-autoscaler.kubernetes.io/memory: "{{ $nodeGroup.memory }}G"
    capacity.cluster-autoscaler.kubernetes.io/cpu: "{{ $nodeGroup.cpu }}"
    capacity.cluster-autoscaler.kubernetes.io/ephemeral-disk: "{{ $nodeGroup.rootVolumeSize }}Gi"
    capacity.cluster-autoscaler.kubernetes.io/maxPods: "500"
    capacity.cluster-autoscaler.kubernetes.io/labels: "{{- $labels := list }}{{- range $key, $value := $nodeGroup.labels }}{{- $labels = append $labels (printf "%s=%s" $key $value) }}{{- end }}{{- join "," $labels }}"
    capacity.cluster-autoscaler.kubernetes.io/taints: "{{- $taints := list }}{{- range $taint := $nodeGroup.taints }}{{- $taints = append $taints (printf "%s=%s:%s" $taint.key $taint.value $taint.effect) }}{{- end }}{{- join "," $taints }}"
spec:
  clusterName: {{ $.Values.global.clusterName }}
  replicas: {{ $nodeGroup.replicas }}
  template:
    {{- if $nodeGroup.labels }}
    metadata:
      # Label should meet one of the following criterias to propagate to Node :
      #
      # (1) Has node-role.kubernetes.io as prefix.
      # (2) Belongs to node-restriction.kubernetes.io domain.
      # (3) Belongs to node.cluster.x-k8s.io domain.
      #
      # REFER : https://cluster-api.sigs.k8s.io/developer/architecture/controllers/metadata-propagation#machine
      labels: {{- toYaml $nodeGroup.labels | nindent 8 }}
    {{- end }}
    spec:
      clusterName: {{ $.Values.global.clusterName }}
      version: {{ $.Values.global.kubernetes.version }}
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: HCloudMachineTemplate
        name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
{{- end }}
{{- end }}

{{/* Handling node-groups in Hetzner Bare Metal. */}}
{{- if eq .Values.mode "bare-metal" }}
{{- range $nodeGroupIndex, $nodeGroup := $.Values.nodeGroups.bareMetal }}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
spec:
  clusterName: {{ $.Values.global.clusterName }}
  replicas: {{ len $nodeGroup.bareMetalHosts }}

  template:
    {{- if $nodeGroup.labels }}
    metadata:
      # Label should meet one of the following criterias to propagate to Node :
      #
      # (1) Has node-role.kubernetes.io as prefix.
      # (2) Belongs to node-restriction.kubernetes.io domain.
      # (3) Belongs to node.cluster.x-k8s.io domain.
      #
      # REFER : https://cluster-api.sigs.k8s.io/developer/architecture/controllers/metadata-propagation#machine
      labels: {{- toYaml $nodeGroup.labels | nindent 8 }}
    {{- end }}
    spec:
      clusterName: {{ $.Values.global.clusterName }}
      version: {{ $.Values.global.kubernetes.version }}
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
      infrastructureRef:
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: HetznerBareMetalMachineTemplate
        name: {{ printf "%s-%s" $.Values.global.clusterName $nodeGroup.name }}
{{- end }}
{{- end }}
