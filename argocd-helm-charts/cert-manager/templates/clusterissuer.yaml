{{- if .Values.issuer.enabled -}}
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ .Values.issuer.name }}
spec:
  acme:
    email: {{ .Values.issuer.issuerEmail }}
    preferredChain: {{ .Values.issuer.preferredChain }}
    privateKeySecretRef:
      name: {{ .Values.issuer.secret }}
    {{- if .Values.issuer.production }}
    server: https://acme-v02.api.letsencrypt.org/directory
    {{- else }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
    {{- end -}}
{{- if kindIs "slice" .Values.issuer.solvers }}
    solvers:
    {{- range $k, $v := .Values.issuer.solvers -}}
    {{- if eq (toString $v.type) "dns"}}
    {{- if not $v.dnsNames }}
    {{- fail (printf "Value dnsNames is required for cloudProvider: %s" $v.cloudProvider) }}
    {{- end }}
    {{- range $d, $dnsName := $v.dnsNames -}}
    {{- if not $dnsName}}
    {{- fail (printf "Value of dnsName can't be empty for cloudProvider: %s" $v.cloudProvider) }}
    {{- end }}
    {{- end }}
    {{- if eq (toString $v.cloudProvider) "cloudflare" }}
    - dns01:
        {{ $v.cloudProvider }}:
          email: {{ $v.issuerEmail }}
          apiTokenSecretRef:
            name: {{ $v.cloudProviderSecret }}
            key: api-token
      selector:
        dnsNames:
          {{- range $v.dnsNames }}
          - {{ . | quote }}
          {{- end }}
    {{- else if eq (toString $v.cloudProvider) "route53" }}
    - dns01:
        {{ $v.cloudProvider }}:
          region: {{ $v.region }}
          {{- if $v.hostedZoneID }}
          hostedZoneID: {{ $v.hostedZoneID }}
          {{- end }}
      selector:
        dnsNames:
          {{- range $v.dnsNames }}
          - {{ . | quote }}
          {{- end }}
    {{- end }}
    {{- else if eq (toString $v.type) "http"}}
    - http01:
        ingress:
          class: {{ $v.http01.ingress.ingressClassName }}
    {{- end -}}
    {{- end }}
{{- else -}}
    {{- if eq (toString .Values.issuer.cloudProvider) "cloudflare" }}
    solvers:
    - dns01:
        {{ .Values.issuer.cloudProvider }}:
          email: {{ .Values.issuer.issuerEmail }}
          apiTokenSecretRef:
            name: {{ .Values.issuer.cloudProviderSecret }}
            key: api-token
    {{- else if eq (toString .Values.issuer.cloudProvider) "route53" }}
    solvers:
    - dns01:
        {{ .Values.issuer.cloudProvider }}:
          region: {{ .Values.issuer.region }}
          {{- if .Values.issuer.hostedZoneID }}
          hostedZoneID: {{ .Values.issuer.hostedZoneID }}
          {{- end }}
      selector:
        dnsZones:
          {{- range.Values.issuer.dnsZones }}
          - {{ . | quote }}
          {{- end }}
    {{- else }}
    solvers:
    - http01:
        ingress:
          class: traefik-cert-manager
    {{- end -}}
{{- end -}}
{{- end -}}
