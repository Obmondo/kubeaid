{{ if (.Values.postgresql.logicalbackup).enabled  }}
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: postgres-logical-backup
spec:
  concurrencyPolicy: Forbid
  failedJobsHistoryLimit: 1
  schedule: {{ (.Values.postgresql.logicalbackup).schedule | default "30 00 * * *" }}
  successfulJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: logical-backup
              image: ghcr.io/obmondo/postgres-logical-backup:v1.0.6
              imagePullPolicy: IfNotPresent
              env:
                - name: POD_NAMESPACE
                  valueFrom:
                    fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                - name: PGHOST
                  value: {{ .Values.postgresql.host | default "keycloak-pgsql-rw" }}
                - name: PGPASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: {{ .Values.postgresql.pass }}
                      key: password
                - name: PGPORT
                  value: "{{ .Values.postgresql.port | default 5432 }}"
                - name: PGUSER
                  value: {{ .Values.postgresql.user | default "keycloak" }}
                - name: PGDATABASE
                  value: {{ .Values.postgresql.db | default "keycloak" }}
                - name: CLUSTER_NAME_LABEL
                  value: {{ (.Values.postgresql.logicalbackup).pgOperatorClusterName | default "keycloakx-pgsql" }}

              {{- if eq .Values.postgresql.logicalbackup.provider "az" }}
                - name: LOGICAL_BACKUP_PROVIDER
                  value: "az"
                - name: LOGICAL_BACKUP_AZURE_STORAGE_ACCOUNT_NAME
                  value: {{ (.Values.postgresql.logicalbackup).storeageaccount }}
                - name: LOGICAL_BACKUP_AZURE_STORAGE_CONTAINER
                  value: {{ (.Values.postgresql.logicalbackup).azurecontainer }}
                - name: LOGICAL_BACKUP_AZURE_STORAGE_ACCOUNT_KEY
                  valueFrom:
                    secretKeyRef:
                      key: LOGICAL_BACKUP_AZURE_STORAGE_ACCOUNT_KEY
                      name: keycloakx-pgsql-postgres-pod-env
                - name: LOGICAL_BACKUP_S3_BUCKET
                  value: {{ (.Values.postgresql.logicalbackup).azurecontainer }}
                - name: LOGICAL_BACKUP_S3_BUCKET_SCOPE_SUFFIX
                  value: {{ (.Values.postgresql.logicalbackup).s3bucketscopesuffix | default "logicalbackup" }}

              {{- else if eq .Values.postgresql.logicalbackup.provider "s3" }}
                - name: LOGICAL_BACKUP_PROVIDER
                  value: "s3"
                - name: AWS_ACCESS_KEY_ID
                  value: {{ (.Values.postgresql.logicalbackup).s3accesskeyid }}
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: {{ (.Values.postgresql.logicalbackup).s3accesssecretkey }}
                      key: aws-secret-key
                - name: LOGICAL_BACKUP_S3_ENDPOINT
                  value: {{ (.Values.postgresql.logicalbackup).s3endpoint }}
                - name: LOGICAL_BACKUP_PROVIDER
                  value: "s3"
                - name: LOGICAL_BACKUP_S3_BUCKET_SCOPE_SUFFIX
                  value: {{ (.Values.postgresql.logicalbackup).s3bucketscopesuffix | default "logicalbackup" }}
                - name: LOGICAL_BACKUP_S3_REGION
                  value: {{ (.Values.postgresql.logicalbackup).s3region }}
                - name: LOGICAL_BACKUP_S3_BUCKET
                  value: {{ (.Values.postgresql.logicalbackup).s3bucket }}
                - name: LOGICAL_BACKUP_S3_RETENTION_TIME
                  value: {{ (.Values.postgresql.logicalbackup).retention }}
              {{- end }}

                - name: PG_VERSION
                  value: "{{ (.Values.postgresql.logicalbackup).pgversion | default 16 }}"
                - name: POSTGRES_OPERATOR
                  value: cngp
              resources:
                limits:
                  memory: 500Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              securityContext:
                allowPrivilegeEscalation: true
                privileged: false
                readOnlyRootFilesystem: false
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Never
          terminationGracePeriodSeconds: 300
{{ end }}
