{{/*
If the user has enabled the postgresql subchart or passed in an external
Database with plain text credentials, we create a secret with those credentials
to 
*/}}
{{- if or .Values.postgresql.enabled .Values.mysql.enabled .Values.externalDatabase.enabled }}
{{- if and (not .Values.postgresql.global.postgresql.auth.existingSecret) (not .Values.externalDatabase.existingSecret) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-db-secret
  labels:
{{ include "labels" . | nindent 4}}
data:
  {{- if .Values.postgresql.enabled }}
  database: {{ .Values.postgresql.global.postgresql.auth.database | b64enc | quote }}
  username: {{ .Values.postgresql.global.postgresql.auth.username | b64enc | quote }}
  {{- if not .Values.postgresql.global.postgresql.auth.password }}
  password: {{ randAlphaNum 24 | b64enc | quote }}
  {{- else }}
  password: {{ .Values.postgresql.global.postgresql.auth.password | b64enc | quote }}
  {{- end }}
  {{- else if .Values.mysql.enabled }}
  database: {{ .Values.mysql.auth.database | b64enc | quote }}
  username: {{ .Values.mysql.auth.username | b64enc | quote }}
  {{- if not .Values.mysql.auth.password }}
  password: {{ randAlphaNum 24 | b64enc | quote }}
  {{- else }}
  password: {{ .Values.mysql.auth.password | b64enc | quote }}
  {{- end }}
  {{- else if .Values.externalDatabase.enabled }}
  hostname: {{ .Values.externalDatabase.hostname | b64enc | quote }}
  database: {{ .Values.externalDatabase.database | b64enc | quote }}
  username: {{ .Values.externalDatabase.username | b64enc | quote }}
  password: {{ .Values.externalDatabase.password | b64enc | quote }}
  {{- end }}
{{- end }}
{{- end }}
