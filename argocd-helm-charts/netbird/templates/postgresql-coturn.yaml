apiVersion: postgresql.cnpg.io/v1
kind: Cluster
metadata:
  {{ if (.Values.externalDatabases.coturn).recover }}
  name: coturn-pgsql-recover
  {{ else }}
  name: coturn-pgsql
  {{ end }}
spec:
  instances: {{ ((.Values.externalDatabases.coturn).instance) | default 1 }}
  {{ if (.Values.externalDatabases.coturn).recover }}
  bootstrap:
    recovery:
      source: netbird-pgsql
      database: netbird
      owner: netbird
      secret:
        name: netbird-pgsql-app
  {{ else }}
  bootstrap:
    initdb:
      database: netbird
      owner: netbird
  {{ end }}
  resources:
    limits:
      memory: {{ (((.Values.externalDatabases.coturn).resources).limits).memory | default "800Mi" }}
    requests:
      memory: {{ (((.Values.externalDatabases.coturn).resources).requests).memory | default "500Mi" }}
      cpu: {{ (((.Values.externalDatabases.coturn).resources).requests).cpu | default "100m" }}
  storage:
    size: {{ (.Values.externalDatabases.coturn).size }}
    {{- if (.Values.externalDatabases.coturn).storageClass }}
    storageClass: {{ (.Values.externalDatabases.coturn).storageClass }}
    {{- end }}
  {{- if (.Values.externalDatabases.coturn).recover }}
  externalClusters:
    - name: netbird-pgsql
      barmanObjectStore:
        destinationPath: {{ ((.Values.externalDatabases.coturn).backup).destinationPath }}
        endpointURL: {{ ((.Values.externalDatabases.coturn).backup).endpointURL }}
        {{- if eq ((.Values.externalDatabases.coturn).backup).cloud "aws" }}
        s3Credentials:
          accessKeyId:
            name: netbird-pgsql-postgres-pod-env
            key: AWS_ACCESS_KEY_ID
          secretAccessKey:
            name: netbird-pgsql-postgres-pod-env
            key: AWS_SECRET_ACCESS_KEY
        {{- end }}
        {{- if eq ((.Values.externalDatabases.coturn).backup).cloud "azure" }}
        azureCredentials:
          connectionString:
            name: netbird-pgsql-postgres-pod-env
            key: AZURE_CONNECTION_STRING
          storageAccount:
            name: netbird-pgsql-postgres-pod-env
            key: AZURE_STORAGE_ACCOUNT
          storageKey:
            name: netbird-pgsql-postgres-pod-env
            key: AZURE_STORAGE_KEY
          storageSasToken:
            name: netbird-pgsql-postgres-pod-env
            key: AZURE_STORAGE_SAS_TOKEN
        {{- end }}
        wal:
          maxParallel: 8
  {{- end }}
  {{- if (.Values.externalDatabases.coturn).backup }}
  backup:
    barmanObjectStore:
      destinationPath: {{ ((.Values.externalDatabases.coturn).backup).destinationPath }}
      endpointURL: {{ ((.Values.externalDatabases.coturn).backup).endpointURL }}
      {{- if eq ((.Values.externalDatabases.coturn).backup).cloud "aws" }}
      s3Credentials:
        accessKeyId:
          name: netbird-pgsql-postgres-pod-env
          key: AWS_ACCESS_KEY_ID
        secretAccessKey:
          name: netbird-pgsql-postgres-pod-env
          key: AWS_SECRET_ACCESS_KEY
      {{- end }}
      {{- if eq ((.Values.externalDatabases.coturn).backup).cloud "azure" }}
      azureCredentials:
        connectionString:
          name: netbird-pgsql-postgres-pod-env
          key: AZURE_CONNECTION_STRING
        storageAccount:
          name: netbird-pgsql-postgres-pod-env
          key: AZURE_STORAGE_ACCOUNT
        storageKey:
          name: netbird-pgsql-postgres-pod-env
          key: AZURE_STORAGE_KEY
        storageSasToken:
          name: netbird-pgsql-postgres-pod-env
          key: AZURE_STORAGE_SAS_TOKEN
      {{- end }}
      wal:
        compression: gzip
        encryption: AES256
    retentionPolicy: "30d"
  {{ end  }}
