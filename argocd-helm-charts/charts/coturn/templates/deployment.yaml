apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "coturn.fullname" . }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "coturn.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "coturn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "coturn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coturn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --listening-port=3478
            - --tls-listening-port=5349
            {{- if .Values.fingerprint }}
            - --fingerprint
            {{- end }}
            {{- if index .Values "lt-cred-mech" }}
            - --lt-cred-mech
            {{- end }}
            {{- range $user := .Values.users }}
            - --user={{ $user.name }}:$${{ printf "COTURN_USER_%s_KEY" $user.name }}
            {{- end }}
            {{- if .Values.certificate.enabled }}
            - --cert=/usr/local/etc/tls.crt
            - --pkey=/usr/local/etc/tls.key
            {{- else }}
            {{- if .Values.cert }}
            - --cert={{ .Values.cert }}
            {{- end }}
            {{- if .Values.pkey }}
            - --pkey={{ .Values.pkey }}
            {{- end }}
            {{- end }}
            - --realm={{ .Values.realm }}
            - --log-file=stdout
            - --no-software-attribute
            - --no-cli
            {{- range $extraOption := .Values.extraOptions }}
            - {{ $extraOption }}
            {{- end }}
          {{- with .Values.users }}
          env:
            {{- range $user := . }}
            - name: {{ printf "COTURN_USER_%s_KEY" $user.name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretKeyRef.name }}
                  key: {{ .secretKeyRef.key }}
            {{- end }}
          {{- end }}
          ports:
            - name: tcp
              containerPort: 3478
              protocol: TCP
            - name: udp
              containerPort: 3478
              protocol: UDP
            - name: tcp-tls
              containerPort: 5349
              protocol: TCP
            - name: udp-tls
              containerPort: 5349
              protocol: UDP
          livenessProbe:
            tcpSocket:
              port: tcp
            initialDelaySeconds: 30
            failureThreshold: 3
          readinessProbe:
            tcpSocket:
              port: tcp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/turnserver.conf
              name: config
              subPath: turnserver.conf
            {{- if .Values.certificate.enabled }}
            - mountPath: /usr/local/etc
              name: certs
            {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: ScheduleAnyway
      volumes:
        - name: config
          configMap:
            name: {{ include "coturn.fullname" . }}
        {{- if .Values.certificate.enabled }}
        - name: certs
          secret:
            secretName: {{ include "coturn.fullname" . }}
        {{- end }}
