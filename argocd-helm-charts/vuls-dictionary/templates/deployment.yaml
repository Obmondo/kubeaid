apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vuls-dictionary.fullname" . }}
  labels:
    {{- include "vuls-dictionary.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "vuls-dictionary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vuls-dictionary.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vuls-dictionary.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.cve.enabled }}
        - name: {{ .Chart.Name }}-cve
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.cve.repository }}:{{ .Values.image.cve.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - server
          ports:
            - name: http-go-cve
              containerPort: {{ .Values.service.goCVEDictionary.port }}
              protocol: TCP
          livenessProbe:
             initialDelaySeconds: 300
             httpGet:
              path: /go-cve-dictionary/health
              port: {{ .Values.service.goCVEDictionary.port }}
              httpHeaders:
                - name: Host
                  value: {{ (index .Values.ingress.hosts 0).host }}
          readinessProbe:
            initialDelaySeconds: 300
            httpGet:
              path: /go-cve-dictionary/health
              port: {{ .Values.service.goCVEDictionary.port }}
              httpHeaders:
                - name: Host
                  value: {{ (index .Values.ingress.hosts 0).host }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: dictionary
              mountPath: /go-cve-dictionary
        {{- end }}
        {{- if .Values.oval.enabled }}
        - name: {{ .Chart.Name }}-oval
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.oval.repository }}:{{ .Values.image.oval.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - server
          ports:
            - name: http-goval
              containerPort: {{ .Values.service.govalDictionary.port }}
              protocol: TCP
          livenessProbe:
            initialDelaySeconds: 300
            httpGet:
              path: /goval-dictionary/health
              port: {{ .Values.service.govalDictionary.port }}
              httpHeaders:
                - name: Host
                  value: {{ (index .Values.ingress.hosts 0).host }}
          readinessProbe:
            initialDelaySeconds: 300
            httpGet:
              path: /goval-dictionary/health
              port: {{ .Values.service.govalDictionary.port }}
              httpHeaders:
                - name: Host
                  value: {{ (index .Values.ingress.hosts 0).host }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: dictionary
              mountPath: /go-cve-dictionary
        {{- end }}
      volumes:
        - name: dictionary
          persistentVolumeClaim:
            claimName: {{ include "vuls-dictionary.fullname" . }}-pvc
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
